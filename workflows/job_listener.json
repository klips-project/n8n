{
  "name": "job_listener",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "queue": "job_queue",
        "options": {}
      },
      "name": "job listener1",
      "type": "n8n-nodes-base.rabbitmqTrigger",
      "typeVersion": 1,
      "position": [
        -180,
        570
      ],
      "credentials": {
        "rabbitmq": "rabbitcredentials"
      }
    },
    {
      "parameters": {
        "functionCode": "try {\n  var task = JSON.parse(items[0].json.content);\n\n  // WORKAROUND for reading JSON content as next job\n  if (task.fields) {\n    task = task.content;\n  }\n\n  // validate\n  if (!task || !task.job || task.job.length < 1) {\n    throw 'Invalid arguments given';\n  }\n  // create unique ID if necessary (on first run)\n  if (!task.id) {\n    task.id = parseInt(new Date() * Math.random(), 10);\n  }\n  //find next job entry that has not run yet (no status)\n  var nextJobIdx = -1;\n  var nextJobEntry;\n  task.job.some(function (job, idx) {\n    if (!job.status) {\n      nextJobEntry = job;\n      nextJobIdx = idx;\n      return true;\n    } else {\n      return false;\n    }\n  });\n  console.log('next job: ' + nextJobEntry.type ? nextJobEntry.type : 'none');\n} catch (e) {\n  return [{ json: { error: e.toString() } }];\n}\nif (nextJobEntry) {\n  task.nextJob = {\n    job: nextJobEntry,\n    idx: nextJobIdx\n  };\n} else {\n  // overall job success\n  task.status = 'success';\n}\n\nitems[0].json.content = task;\nreturn items;\n\n"
      },
      "name": "Function returns next job name1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        90,
        580
      ]
    },
    {
      "parameters": {
        "queue": "={{$node[\"IF there is a next job1\"].json.content[\"nextJob\"][\"job\"][\"type\"]}}",
        "options": {}
      },
      "name": "send message to next queue1",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1,
      "position": [
        870,
        510
      ],
      "credentials": {
        "rabbitmq": "rabbitcredentials"
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [],
          "boolean": [
            {
              "value1": "={{$node[\"Function returns next job name1\"].items[0].json.content.error}}",
              "value2": true
            }
          ]
        }
      },
      "name": "IF invalid job json1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        280,
        580
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Send Email1",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        450,
        450
      ],
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [],
          "string": [
            {
              "value1": "={{$node[\"Function returns next job name1\"].json.content[\"nextJob\"][\"job\"][\"type\"]}}",
              "operation": "notEqual",
              "value2": "'none'"
            }
          ]
        }
      },
      "name": "IF there is a next job1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        610,
        600
      ]
    }
  ],
  "connections": {
    "job listener1": {
      "main": [
        [
          {
            "node": "Function returns next job name1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function returns next job name1": {
      "main": [
        [
          {
            "node": "IF invalid job json1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF invalid job json1": {
      "main": [
        [
          {
            "node": "Send Email1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF there is a next job1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF there is a next job1": {
      "main": [
        [
          {
            "node": "send message to next queue1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "1"
}